form {
  &.inline {
    & > div {
      display: flex;
      gap: 2em;
      justify-content: space-between;

      & > *:not(:has(label)) {
        display: flex;
        align-items: flex-end;
      }

      & > div:has(.controls) {
        display: flex;
        flex-direction: column;

        & .controls {
          flex: 1;
          flex-direction: column;
          display: flex;
          justify-content: center;
        }
      }

      & input:not([type="checkbox"], [type="radio"]),
      & select,
      & textarea,
      & button {
        margin-bottom: 0;
      }

      & a[role="button"] {
        height: max-content;
      }
    }
  }
}

#logout-form {
  margin-bottom: 0;
}

form {
  .button-row {
    display: flex;
    gap: var(--pico-form-element-spacing-horizontal);

    & > * {
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: 10px;
    }

    [role="button"],
    button,
    input[type="button"],
    input[type="reset"],
    input[type="submit"] {
      margin-bottom: 0;

      &
        + :is(
          [role="button"],
          button,
          input[type="button"],
          input[type="reset"],
          input[type="submit"]
        ) {
        margin-left: 0em;
      }
    }
  }
}

form {
  *:has(:disabled) {
    label {
      color: var(--pico-muted-color);
    }
  }

  .checkbox {
    &:has(input.hidden),
    &:has([x-cloak]) {
      display: none;
    }
  }

  label + div:not(:has(.visible)):has(.hidden) {
    &::before {
      content: "--";
      color: var(--pico-muted-color);
      padding-bottom: 0.5em;
      display: block;
    }
  }

  .checkbox_table {
    table {
      td,
      th {
        &:first-child {
          width: 0;
          padding-right: 0;
        }
      }

      label {
        padding: 0;
        margin: 0;
      }
    }
  }

  & > div:has(.display-none) {
    display: none;
  }
}

form {
  textarea {
    height: clamp(5em, 25vh, 15em);
  }
}
